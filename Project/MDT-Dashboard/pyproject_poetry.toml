[tool.poetry]
name = "mdt-dashboard"
version = "1.0.0"
description = "Enterprise-grade Model Drift Detection & Telemetry Dashboard for Production ML Systems"
authors = ["Ajay kumar Pondugala <aponduga@cisco.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/yourorg/mdt-dashboard"
repository = "https://github.com/yourorg/mdt-dashboard"
documentation = "https://yourorg.github.io/mdt-dashboard"
keywords = ["machine-learning", "drift-detection", "mlops", "monitoring", "ml-observability"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "mdt_dashboard", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
# Core Framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
gunicorn = "^21.2.0"
streamlit = "^1.28.1"
typer = {extras = ["all"], version = "^0.9.0"}

# Database & ORM
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
asyncpg = "^0.29.0"

# Async & Background Tasks
celery = {extras = ["redis"], version = "^5.3.4"}
redis = "^5.0.1"
flower = "^2.0.1"

# ML & Data Science
scikit-learn = "^1.3.2"
pandas = "^2.1.3"
numpy = "^1.25.2"
scipy = "^1.11.4"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
plotly = "^5.17.0"

# MLOps & Experiment Tracking
mlflow = "^2.8.1"
optuna = "^3.4.0"

# Configuration & Validation
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"

# HTTP & API
httpx = "^0.25.2"
requests = "^2.31.0"

# Monitoring & Observability
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
sentry-sdk = {extras = ["fastapi"], version = "^1.38.0"}

# Data Processing & Validation
great-expectations = "^0.18.8"
evidently = "^0.4.8"
deepdiff = "^6.7.1"

# Utilities
click = "^8.1.7"
rich = "^13.7.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
email-validator = "^2.1.0"

# File Handling
openpyxl = "^3.1.2"
xlsxwriter = "^3.1.9"

# Cloud Integration (Optional)
boto3 = {version = "^1.34.0", optional = true}
google-cloud-storage = {version = "^2.10.0", optional = true}
azure-storage-blob = {version = "^12.19.0", optional = true}

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
pytest-benchmark = "^4.0.0"
httpx = "^0.25.2"  # For API testing
factory-boy = "^3.3.0"  # For test data generation

# Code Quality
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
bandit = "^1.7.5"
safety = "^2.3.5"
pre-commit = "^3.6.0"

# Documentation
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"
mkdocs-mermaid2-plugin = "^1.1.1"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^1.3.0"

# Development Tools
ipython = "^8.17.2"
jupyter = "^1.0.0"
notebook = "^7.0.6"

# Performance Monitoring
psutil = "^5.9.6"
memory-profiler = "^0.61.0"
py-spy = "^0.3.14"

[tool.poetry.extras]
aws = ["boto3"]
gcp = ["google-cloud-storage"]
azure = ["azure-storage-blob"]
all = ["boto3", "google-cloud-storage", "azure-storage-blob"]

[tool.poetry.scripts]
mdt = "mdt_dashboard.cli:app"
mdt-server = "mdt_dashboard.api.main:run"
mdt-dashboard = "mdt_dashboard.dashboard.main:run"
mdt-worker = "mdt_dashboard.worker:main"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "mlflow.*",
    "celery.*",
    "flower.*",
    "evidently.*",
    "great_expectations.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
